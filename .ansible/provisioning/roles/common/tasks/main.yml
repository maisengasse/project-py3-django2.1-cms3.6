---
###############################################################################
############# Debian, Ubuntu, ...
- name: update apt
  apt: update_cache=yes cache_valid_time=3600
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  when: create_project

- name: Add Python3.6 Repository
  apt_repository: repo=ppa:deadsnakes/ppa state=present
  when: create_project

- name: Add NodeJS6 Repository Key
  apt_key:
    url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
    state: present
  when: create_project

- name: Add NodeJS6 Repository
  apt_repository: repo={{item}} state=present
  with_items:
    deb https://deb.nodesource.com/node_13.x bionic main
    deb-src https://deb.nodesource.com/node_13.x bionic main
  when: create_project

- name: Update and upgrade apt packages
  become: true
  apt:
    update_cache: yes
  when: create_project

- name: Install needed packages (apt)
  apt: 
    pkg: 
      - git
      - subversion
      - curl
      - language-pack-de-base
      - build-essential
      - libssl-dev
      - libjpeg-dev
      - libtiff-dev
      - zlib1g-dev
      - htop
      - libfreetype6-dev
      - liblcms2-dev
      - libldap2-dev
      - gettext
      - memcached
      - unzip
      - libffi-dev
      - cowsay
      - node-less
      - python-dev
      - fortune-mod 
      - python-pip
      - python-virtualenv
      - python3.6
      - python3.6-dev
      - python3.6-venv
    state: present
  when: create_project

- name: restart memcached
  service: name=memcached state=restarted
  when: create_project

- name: Install NodeJs packages
  npm: name={{ item }} global=yes state=present
  with_items:
    - postcss-cli
    - autoprefixer
  when: create_project

- name: SSH config directory
  file: "path={{ home_dir }}/.ssh owner={{ app_user }} group={{ app_grp }} mode=0700 state=directory"
  when: create_project

- name: copy private development Key
  template: "src='id_rsa' dest={{ home_dir }}/.ssh/id_rsa owner={{ app_user }} group={{ app_grp }} mode=0600"
  when: create_project

- name: copy public development Key
  template: "src='id_rsa.pub' dest={{ home_dir }}/.ssh/id_rsa.pub owner={{ app_user }} group={{ app_grp }} mode=0600"
  when: create_project

  # copy: "src=/home/vagrant/.ssh/authorized_keys dest={{ home_dir }}/.ssh/authorized_keys owner={{ app_user }} group={{ app_grp }} mode=0600"


# - name: Add project group
#   group: "name={{ app_grp }} state=present"
#   when: not deployment

# - name: Add project user
#   user: "name={{ app_user }} generate_ssh_key=yes group={{ app_grp }} state=present shell=/bin/bash groups=sudo"
#   when: not deployment

# - name: Create .ssh directory
#   file: "path={{ home_dir }}/.ssh owner={{ app_user }} group={{ app_grp }} mode=0700 state=directory"
#   when: not deployment

# - name: Copy Vagrant Authorized Keys
#   copy: "src=/home/vagrant/.ssh/authorized_keys dest={{ home_dir }}/.ssh/authorized_keys owner={{ app_user }} group={{ app_grp }} mode=0600"
#   when: not deployment
